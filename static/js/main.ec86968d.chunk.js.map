{"version":3,"sources":["components/News/News.module.scss","components/Music/Music.module.scss","components/Settings/Settings.module.scss","Assets/Images/loading.gif","Assets/Images/change.svg","Assets/Images/like.svg","Assets/Images/react.svg","components/Navbar/Navbar.module.scss","components/common/Paginator/Paginator.module.scss","components/Header/Header.module.scss","serviceWorker.js","components/Navbar/Navbar.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","Redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/common/FromControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","api/api.js","utils/object-helpers.js","Redux/users-reducer.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","components/common/preloader/Preloader.js","Redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/Profileinfo/ProfileStatusWithHooks.js","components/Profile/Profileinfo/ProfildeDataForm.js","Redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profileinfo/Profileinfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","Redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","App.js","index.js","components/Dialogs/Dialogs.module.scss","components/Users/Users.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Login/Login.module.sass","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/Profileinfo/Profileinfo.module.scss","Assets/Images/user-img.png","App.module.scss","components/common/FromControls/FormsControls.module.scss","Assets/Images/arrow.svg"],"names":["module","exports","Boolean","window","location","hostname","match","NavBar","useState","isScroll","setIsScroll","useEffect","addEventListener","isTop","scrollY","innerWidth","wrapClasses","cn","classes","nav__list","navIsFixed","className","nav","item","to","activeClassName","active","News","news","Music","music","Settings","settings","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","Dialogitem","props","path","dialogItem","Message","messageItem","FormControl","input","meta","touched","error","children","hasError","form–°ontrol","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","formRow","Field","validate","required","value","maxLengthCreator","maxLength","length","maxLength100","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElements","map","dialog","key","messagesElements","isAuth","dialogItems","messageItems","values","sendMessage","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","sendMessageCreator","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","useId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totalCount","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagination","onClick","pagination__btn","pagination__btn_prev","src","arrowIMG","alt","pagination__items","p","selectedPage","pageNumber","e","pagination__btn_next","User","user","usersItem","usersItem__info","photos","small","userPhoto","disabled","some","follow__btn","follow__btn_reverse","Users","Preloader","preloader","getUsersState","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","ProfileStatusWithHooks","editMode","setEditMode","setStatus","deactivatedEditMode","profileStatus","isOwner","profileStatus__set","autoFocus","onBlur","onChange","currentTarget","onKeyPress","event","profileStatus__get","profileStatus__current","statusEmpty","ProfileDataFormReduxForm","profileForm","profileForm__row","profileForm__rowInner","Object","keys","contacts","formSummaryError","mainBtn","posts","likesCount","getUserProfile","profileReducer","newPost","newPostText","Post","postText","post__likes","post__like","likeIcon","like","AddPostFormRedux","postsForm","MyPosts","memo","postsElements","index","postsBlock","postBlock","addPost","MyPostsContainer","profilePage","addPostActionCreator","ProfileData","goToEditMode","devider","profileInfo__get","fullName","profileInfo__row","lookingForAJobDescription","aboutMe","profileInfo__contacts","contactTitle","contactValue","Contact","href","ProfileInfo","Fragment","profileInfo","avaBlock","large","avaBlock__img","avaBlock__panel","avaBlock__label","target","files","changeIcon","changeAva","profileInfo__data","initialValues","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","snapshot","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","login","logout","header","logo","loginBlock","loginBlock__row","loginBlock__name","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","LoginReduxForm","loginForm","formInput","initialized","appReducer","sidebarReducer","reducers","combineReducers","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","App","initializeApp","wrapper","main","content","exact","render","DialogsContainer","AppContainer","promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ec86968d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__9WCri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music___aojt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1qASl\"};","module.exports = __webpack_public_path__ + \"static/media/loading.29d7d247.gif\";","module.exports = __webpack_public_path__ + \"static/media/change.7142790b.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.6bca9bc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.eab76719.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Uaxz\",\"nav__list\":\"Navbar_nav__list__2nm9O\",\"navIsFixed\":\"Navbar_navIsFixed__3UeT2\",\"item\":\"Navbar_item__3N5W2\",\"active\":\"Navbar_active__3aFti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__qrPDL\",\"pagination__items\":\"Paginator_pagination__items__2u5RZ\",\"pageNumber\":\"Paginator_pageNumber__1_a8X\",\"selectedPage\":\"Paginator_selectedPage__1u9_m\",\"pagination__btn\":\"Paginator_pagination__btn__1C0BP\",\"pagination__btn_prev\":\"Paginator_pagination__btn_prev__2mUFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1UEFA\",\"logo\":\"Header_logo__2rr5R\",\"loginBlock\":\"Header_loginBlock__3puX_\",\"mainBtn\":\"Header_mainBtn__38YwW\",\"loginBlock__row\":\"Header_loginBlock__row__1dCxa\",\"loginBlock__name\":\"Header_loginBlock__name__2Ba2d\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useEffect, useState} from 'react'\r\nimport classes from './Navbar.module.scss'\r\nimport {NavLink} from 'react-router-dom';\r\nimport cn from \"classnames\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    const [isScroll, setIsScroll] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\", () =>{\r\n            const isTop = window.scrollY > 108;\r\n\r\n            if (window.innerWidth > 991) {\r\n                if (isTop) {\r\n                    setIsScroll(true)\r\n                } else {\r\n                    setIsScroll(false)\r\n                }\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const wrapClasses = cn(classes.nav__list,{\r\n        [classes.navIsFixed] : isScroll\r\n    });\r\n\r\n    return(\r\n        <nav className={classes.nav}>\r\n        <ul className={wrapClasses}>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"/profile\" activeClassName={classes.active}>\r\n              Profile\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n              Messages\r\n            </NavLink>\r\n          </li>\r\n          <li className={classes.item}>\r\n            <NavLink to=\"/users\" activeClassName={classes.active}>\r\n              Users\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n};\r\n\r\nexport default NavBar\r\n","import React from \"react\";\r\nimport classes from './News.module.scss'\r\n\r\nconst News = () => {\r\n\r\n    return(\r\n        <div className={classes.news}>\r\n            <h1>\r\n                NEWS\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from \"react\";\r\nimport classes from \"./Music.module.scss\"\r\n\r\nconst Music = () =>{\r\n\r\n    return(\r\n        <div className={classes.music}>\r\n            <h1>Music</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from \"react\";\r\nimport classes from './Settings.module.scss'\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={classes.settings}>\r\n            <h1>Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kurt'},\r\n        {id: 2, name: '–í–∏–∫—Ç–æ—Ä'},\r\n        {id: 3, name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞'},\r\n        {id: 4, name: '–î–µ–Ω–∏—Å'},\r\n        {id: 5, name: '–ò–ª—å—è'},\r\n        {id: 6, name: '–ñ–æ–∑—è'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'hello'},\r\n        {id: 2, message: 'Hi there'},\r\n        {id: 3, message: 'Hi youreself'},\r\n        {id: 4, message: 'lorem dasdas dasd'},\r\n        {id: 5, message: '–ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞?'},\r\n        {id: 6, message: '–ü–æ—à–ª–∏ –ø–∏—Ç—å –ø–∏–≤–∞–æ'}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    // let stateCopy;\r\n\r\n    switch (action.type) {\r\n        // case UPDATE_NEW_MESSAGE_BODY:\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageBody: action.body\r\n        //     };\r\n        //     // stateCopy.newMessageBody = action.body;\r\n        //     // return stateCopy;\r\n        case SEND_MESSAGE:\r\n            // let body = state.newMessageBody;\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:7, message: body}]\r\n            };\r\n\r\n\r\n            // stateCopy.messages.push({\r\n            //     id: 7, message: body\r\n            // });\r\n            // return stateCopy;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    }\r\n};\r\n// export const updateNewMessageBodyCreator = (body) =>  {\r\n//     return {\r\n//         type: UPDATE_NEW_MESSAGE_BODY,\r\n//         body: body\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport classes from './../Dialogs.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialogitem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return(\r\n        <div className={classes.dialogItem}>\r\n            <NavLink\r\n                // to={`/dialogs/${props.id}`}\r\n                to={path}\r\n            >\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogitem","import React from \"react\";\r\nimport classes from './../Dialogs.module.scss'\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={classes.messageItem}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message","import React from \"react\";\r\nimport classes from \"./FormsControls.module.scss\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError =  touched && error;\r\n    return (\r\n        <div className={classes.form–°ontrol + \" \" + (hasError ? classes.error : \" \" ) }>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) =>{\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n};\r\nexport const Input = (props) =>{\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text= \"\") => (\r\n    <div className={classes.formRow}>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n);","export const required = value => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport classes from './Dialogs.module.scss'\r\nimport Dialogitem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FromControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <Dialogitem name={dialog.name} id={dialog.id} key={dialog.id}/>);\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id}/>);\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n\r\n\r\n    // let onSendMessageClick = () => {\r\n    //     props.sendMessage();\r\n    //     // props.fake_store.dispatch(sendMessageCreator());\r\n    // };\r\n\r\n    // let onNewMessageChange = (e) => {\r\n    //    let body = e.target.value;\r\n    //     props.updateNewMessageBody(body);\r\n    // };\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return(\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>\r\n\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={classes.messageItems}>\r\n\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your Message\"\r\n                       validate={[required, maxLength100]}\r\n\r\n                />\r\n                        {/*<textarea*/}\r\n                        {/*    value={newMessageBody}*/}\r\n                        {/*    placeholder=\"Enter your Message\"*/}\r\n                        {/*    onChange={onNewMessageChange}*/}\r\n                        {/*>*/}\r\n\r\n                        {/*</textarea>*/}\r\n            </div>\r\n            <div>\r\n                {/*<button onClick={onSendMessageClick}>Send</button>*/}\r\n                <button>SEND</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n};","import {sendMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     // let state = props.fake_store.getState().dialogsPage;\r\n//     //\r\n//     // let onSendMessageClick = () => {\r\n//     //     props.fake_store.dispatch(sendMessageCreator());\r\n//     // }\r\n//     //\r\n//     // let onNewMessageChange = (body) => {\r\n//     //    props.fake_store.dispatch(updateNewMessageBodyCreator(body));\r\n//     // }\r\n//\r\n//     return <StoreContext.Consumer>\r\n//             {\r\n//                 (fake_store) => {\r\n//\r\n//                     let state = fake_store.getState().dialogsPage;\r\n//\r\n//                     let onSendMessageClick = () => {\r\n//                         fake_store.dispatch(sendMessageCreator());\r\n//                     };\r\n//\r\n//                     let onNewMessageChange = (body) => {\r\n//                         fake_store.dispatch(updateNewMessageBodyCreator(body));\r\n//                     };\r\n//\r\n//                     return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                              sendMessage={onSendMessageClick}\r\n//                              dialogsPage={state}\r\n//                     />\r\n//                 }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n// }\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n        // updateNewMessageBody: (body) => {\r\n        //     dispatch(updateNewMessageBodyCreator(body));\r\n        // },\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps) (AuthRedirectComponent);*/\r\n\r\n// export default DialogsContainer\r\nexport default compose (\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n//    c –Ω–∏–∑—É –≤–≤–µ—Ä—Ö\r\n) (Dialogs);\r\n\r\n","import * as axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:  {\r\n        \"API-KEY\": \"642a3f6d-fe34-48fd-b2cd-37283583ad4a\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1,pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return  instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method! use profile Api');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return  instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status` , { status: status} );\r\n    },\r\n    savePhoto(photoFile){\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`profile/photo` , formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return  instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n\r\n\r\n","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) =>{\r\n    return items.map(u => {\r\n        if  (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    } )\r\n} ;","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users:  [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.useId, \"id\", {followed: true})\r\n               /* users: state.users.map(u => {\r\n                    if  (u.id === action.useId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                } )*/\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.useId, \"id\", {followed: false})\r\n               /* users: state.users.map(u => {\r\n                    if  (u.id === action.useId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                } )*/\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n              ...state,\r\n              users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId )\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const followSuccess = (useId) => (\r\n    {type: FOLLOW, useId}\r\n);\r\nexport const unfollowSuccess = (useId) => (\r\n    { type: UNFOLLOW, useId}\r\n);\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n});\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n});\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT, totalCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n});\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId\r\n});\r\n\r\n\r\n\r\nexport const getUsers =  (currentPage, pageSize) => {\r\n    /* return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        }) */\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst followUnfollowFlow = async(dispatch, useId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, useId));\r\n    let response = await apiMethod(useId);\r\n\r\n    if (response.data.resultCode === 0 ){\r\n        dispatch(actionCreator(useId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, useId));\r\n};\r\n\r\nexport const follow =  (useId) => {\r\n      /* return (dispatch) => {\r\n           dispatch(toggleFollowingProgress(true, useId));\r\n           usersAPI.follow(useId)\r\n               .then(response => {\r\n                   if (response.data.resultCode === 0 ){\r\n                       dispatch(followSuccess(useId));\r\n                   }\r\n                   dispatch(toggleFollowingProgress(false, useId));\r\n               });\r\n    }*/\r\n\r\n       return async (dispatch) => {\r\n           //let apiMethod = usersAPI.follow.bind(usersAPI);\r\n           //let actionCreator = followSuccess;\r\n\r\n           followUnfollowFlow(dispatch, useId, usersAPI.follow.bind(usersAPI) , followSuccess);\r\n\r\n           // dispatch(toggleFollowingProgress(true, useId));\r\n           // let response = await apiMethod(useId);\r\n           //\r\n           // if (response.data.resultCode === 0 ){\r\n           //     dispatch(actionCreator(useId));\r\n           // }\r\n           // dispatch(toggleFollowingProgress(false, useId));\r\n    }\r\n};\r\n\r\nexport const unfollow =  (useId) => {\r\n       /*return (dispatch) => {\r\n           dispatch(toggleFollowingProgress(true, useId));\r\n\r\n            usersAPI.unfollow(useId);\r\n               .then(response => {\r\n                   if (response.data.resultCode === 0 ){\r\n                       dispatch(unfollowSuccess(useId));\r\n                   }\r\n                   dispatch(toggleFollowingProgress(false, useId));\r\n               });\r\n    }*/\r\n       return async (dispatch) => {\r\n           // apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n           //let actionCreator = unfollowSuccess;\r\n           followUnfollowFlow(dispatch, useId,usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n\r\n/*           dispatch(toggleFollowingProgress(true, useId));\r\n\r\n           let response = await apiMethod(useId);\r\n           if (response.data.resultCode === 0 ){\r\n               dispatch(actionCreator(useId));\r\n           }\r\n           dispatch(toggleFollowingProgress(false, useId));*/\r\n        }\r\n};\r\n\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport classes from './Paginator.module.scss';\r\nimport cn from \"classnames\";\r\nimport arrowIMG from \"../../../Assets/Images/arrow.svg\";\r\n\r\n\r\nlet Paginator = ({totalUsersCount,pageSize,onPageChanged,currentPage,portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount /pageSize);\r\n\r\n    let pages =[];\r\n\r\n    for (let i=1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1 ) * portionSize +1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n\r\n    return (\r\n            <div className={classes.pagination}>\r\n                { portionNumber > 1 &&\r\n                <button onClick={ ()=> { setPortionNumber(portionNumber - 1)}} className={ cn (\r\n                    classes.pagination__btn,  classes.pagination__btn_prev\r\n                )}><img src={arrowIMG} alt=\"arrow\"/></button> }\r\n\r\n                <div className={classes.pagination__items}>{\r\n                    pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p) => {\r\n                            return <span className={cn({\r\n                                [classes.selectedPage]: currentPage === p\r\n                            }, classes.pageNumber)}\r\n                                         key={p}\r\n                                         onClick={(e) => {\r\n                                             onPageChanged(p)\r\n                                         }}>\r\n                            {p}\r\n                        </span>\r\n                        }\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n\r\n                { portionCount > portionNumber &&\r\n                <button onClick={ ()=> { setPortionNumber(portionNumber + 1)}} className={ cn (\r\n                    classes.pagination__btn,  classes.pagination__btn_next\r\n                )}> <img src={arrowIMG} alt=\"arrow\"/> </button> }\r\n\r\n\r\n            </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport classes from './Users.module.scss'\r\nimport userPhoto from \"../../Assets/Images/user-img.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport cn from \"classnames\";\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow}) => {\r\n\r\n    return (\r\n        <div className={classes.usersItem}>\r\n            <div className={classes.usersItem__info}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"\"/>\r\n                    </NavLink>\r\n                    <h3>{user.name}</h3>\r\n                    {\r\n                        user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {unfollow(user.id)}} className={cn(classes.follow__btn, classes.follow__btn_reverse)}\r\n                            > Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {follow(user.id)}} className={classes.follow__btn}\r\n                            >Follow</button>\r\n                    }\r\n            </div>\r\n            {/*<div className={classes.usersItem__right}>*/}\r\n            {/*    <span>*/}\r\n            {/*        <span>*/}\r\n            {/*            <h3>{user.name}</h3>*/}\r\n            {/*            /!*<div>{user.status}</div>*!/*/}\r\n            {/*        </span>*/}\r\n            {/*        /!*<span>*!/*/}\r\n            {/*        /!*    <div>{\"user.location.country\"}</div>*!/*/}\r\n            {/*        /!*    <div>{\"user.location.city\"}</div>*!/*/}\r\n            {/*        /!*</span>*!/*/}\r\n            {/*    </span>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage,totalUsersCount,pageSize, onPageChanged,users,...props}) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n            />\r\n            {\r\n                users.map(u => <User\r\n                                    user={u}\r\n                                    followingInProgress={props.followingInProgress}\r\n                                    key={u.id}\r\n                                    unfollow={props.unfollow}\r\n                                    follow={props.follow}\r\n                                />\r\n\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Users;","import React from \"react\";\r\nimport preloader from \"../../../Assets/Images/loading.gif\"\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <div className=\"preloader\"><img src={preloader} alt=\"preloader\" /> </div>\r\n};\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst  getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\n\r\nexport const getUsersState = createSelector(getUsersSelector,\r\n    (users) => {\r\n     return  users.filter(u => true);\r\n});\r\n\r\n\r\n\r\nexport const  getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const  getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const  getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const  getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const  getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    // setUsers,\r\n    setCurrentPage,\r\n    // setTotalUsersCount,\r\n    // toggleIsFetching,\r\n    unfollow, toggleFollowingProgress, getUsers\r\n} from \"../../Redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsersState,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../Redux/users-selectors\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass UsersContainer extends  React.Component{\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props;\r\n        this.props.getUsers(currentPage,pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {\r\n                this.props.isFetching ? <Preloader /> : null\r\n            }\r\n            <Users\r\n                totalUsersCount = {this.props.totalUsersCount}\r\n                pageSize = {this.props.pageSize}\r\n                currentPage = {this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                // toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//\r\n//     }\r\n// };\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersState(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let withRedirect = withAuthRedirect(UsersContainer);\r\n\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        // setUsers,\r\n        setCurrentPage,\r\n        // setTotalUsersCount,\r\n        // toggleIsFetching,\r\n        toggleFollowingProgress,\r\n        getUsers: getUsers\r\n    })\r\n) (UsersContainer)\r\n\r\n\r\n\r\n\r\n// export default withAuthRedirect (connect(mapStateToProps, {\r\n//         follow,\r\n//         unfollow,\r\n//         // setUsers,\r\n//         setCurrentPage,\r\n//         // setTotalUsersCount,\r\n//         // toggleIsFetching,\r\n//         toggleFollowingProgress,\r\n//         getUsers: getUsers\r\n//     }\r\n//     ) (UsersContainer))\r\n\r\n// export default connect(mapStateToProps, {\r\n//         follow,\r\n//         unfollow,\r\n//         // setUsers,\r\n//         setCurrentPage,\r\n//         // setTotalUsersCount,\r\n//         // toggleIsFetching,\r\n//         toggleFollowingProgress,\r\n//         getUsers: getUsers\r\n//     }\r\n//     ) (UsersContainer)\r\n\r\n\r\n\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId));\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(sesUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAc(pageNumber));\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount));\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching));\r\n//         }\r\n//\r\n//     }\r\n// };\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps) (UsersContainer)","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./Profileinfo.module.scss\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // let stateWithSetState = useState(false);\r\n    //   let editMode = stateWithSetState[0];\r\n    //  let setEditMode = stateWithSetState[1];\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activatedMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.profileStatus}>\r\n\r\n                    {/*{ !editMode &&*/}\r\n                    {/*<div className={classes.profileStatus__get}>*/}\r\n                    {/*    <span onClick={activatedMode} className={classes.profileStatus__current}>*/}\r\n                    {/*       {props.status || <span className={classes.statusEmpty}>–∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å </span>}*/}\r\n                    {/*    </span>*/}\r\n                    {/*</div>*/}\r\n                    {/*}*/}\r\n                    {/*{editMode &&*/}\r\n                    {/*<div className={classes.profileStatus__set}>*/}\r\n                    {/*    <input autoFocus={true} onBlur={deactivatedEditMode} onChange={onStatusChange}*/}\r\n                    {/*          value={status} onKeyPress={(event)=> {if(event.key === 'Enter'){*/}\r\n                    {/*                deactivatedEditMode()*/}\r\n                    {/*            }}}*/}\r\n                    {/*    />*/}\r\n                    {/*</div>*/}\r\n                    {/*} */}\r\n\r\n                    {/*–°–ê–ú –°–î–ï–õ–ê–õ, —É–±—Ä–∞—Ç—å –ø–æ—Ç–æ–º*/}\r\n\r\n            {\r\n                props.isOwner\r\n                    ?\r\n                        !editMode\r\n                        ? <div className={classes.profileStatus__get}>\r\n                        <span onClick={activatedMode} className={classes.profileStatus__current}>\r\n                           {props.status || <span className={classes.statusEmpty}>–∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å </span>}\r\n                        </span>\r\n                            </div>\r\n                        : <div className={classes.profileStatus__set}>\r\n                                <input autoFocus={true} onBlur={deactivatedEditMode} onChange={onStatusChange}\r\n                                       value={status} onKeyPress={(event)=> {if(event.key === 'Enter'){\r\n                                    deactivatedEditMode()\r\n                                }}}\r\n                                />\r\n                            </div>\r\n                    : props.status || <span className={classes.statusEmpty}>–Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ </span>\r\n\r\n            }\r\n\r\n\r\n            {/*{ !editMode &&*/}\r\n            {/*<div className={classes.profileStatus__get}>*/}\r\n            {/*            <span onClick={activatedMode} className={classes.profileStatus__current}>*/}\r\n            {/*               {props.status || <span className={classes.statusEmpty}>–∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å </span>}*/}\r\n            {/*            </span>*/}\r\n            {/*</div>*/}\r\n            {/*}*/}\r\n            {/*{editMode &&*/}\r\n            {/*<div className={classes.profileStatus__set}>*/}\r\n            {/*    <input autoFocus={true} onBlur={deactivatedEditMode} onChange={onStatusChange}*/}\r\n            {/*           value={status} onKeyPress={(event)=> {if(event.key === 'Enter'){*/}\r\n            {/*        deactivatedEditMode()*/}\r\n            {/*    }}}*/}\r\n            {/*    />*/}\r\n            {/*</div>*/}\r\n            {/*}*/}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from \"react\";\r\nimport classes from './Profileinfo.module.scss'\r\nimport {createField, Input, Textarea} from \"../../common/FromControls/FormsControls\"\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return  (\r\n        <form onSubmit={handleSubmit} className={classes.profileForm}>\r\n            <div className={classes.profileForm__row}>   <b>  Full name</b> {createField(\"Full name\", \"fullName\", [], Input)} </div>\r\n            {/*<div className={classes.profileForm__row}>*/}\r\n            {/*    <b>Looking fora a job:</b>*/}\r\n            {/*    {createField (\"\", \"lookingForAJob\",[], Input,{type:\"checkbox\"} )}*/}\r\n            {/*</div>*/}\r\n\r\n            <div className={classes.profileForm__row}>\r\n                <b>My skills:</b>\r\n                {createField (\"My skills\", \"lookingForAJobDescription\",[], Textarea )}\r\n            </div>\r\n            <div className={classes.profileForm__row}>\r\n                <b>About me:</b>\r\n                {createField (\"About me\", \"aboutMe\",[], Input )}\r\n            </div>\r\n            <div className={classes.profileForm__row}>\r\n                <b>Contacts</b>\r\n                <div className={classes.profileForm__rowInner}>\r\n                {\r\n                    Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={classes.profileForm__row}>\r\n                            <b>{key}</b>\r\n                                {createField(key, \"contacts.\" + key, [], Input)}\r\n                        </div>\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n\r\n            { error && <div className={classes.formSummaryError}> {error}</div>\r\n            }\r\n           <button className={classes.mainBtn}>Save</button>\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'}) (ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts:  [\r\n        {id: 1, message: '–ü—Ä–æ–¥–∞—é —Å–≤–æ—é –≤–æ–ª–≥—É. –ö–æ–º—É –Ω–∞–¥–æ ?', likesCount: 150},\r\n        {id: 2, message: '–ë—ã–ª–æ –∫—Ä—É—Ç–æ', likesCount: 216},\r\n        {id: 3, message: '–ó—Ä—è –ø–æ—à–ª–∏, –ª—É—á—à–µ –±—ã –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–º–∞', likesCount: 22},\r\n    ],\r\n    // newPostText: '–¢–µ–∫—Å—Ç –∏–∑ State',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 255\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts,newPost ],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos:action.photos}\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profile) =>  {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile\r\n    }\r\n};\r\n\r\nexport const setStatus = (status) =>  {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\n\r\n\r\nexport const savePhotoSuccess = (photos) =>  {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) =>  async (dispatch) => {\r\n    // usersAPI.getProfile(userId)\r\n    //     .then(response => {\r\n    //         dispatch(setUserProfile(response.data));\r\n    //     });\r\n\r\n    let response = await usersAPI.getProfile(userId);\r\n       dispatch(setUserProfile(response.data));\r\n};\r\n\r\n\r\n\r\n\r\nexport const getStatus = (userId) => async (dispatch) =>  {\r\n    // profileAPI.getStatus(userId)\r\n    //     .then(response => {\r\n    //         dispatch(setStatus(response.data));\r\n    //     });\r\n\r\n    let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n};\r\n\r\n\r\nexport const updateStatus = (status) => async (dispatch) =>  {\r\n    // profileAPI.updateStatus(status)\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode ===0 ) {\r\n    //             dispatch(setStatus(status));\r\n    //         }\r\n    //     });\r\n\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0 ) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) =>  {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0 ) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) =>  {\r\n    const userId =  getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0 ) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n        }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default profileReducer;","import React from 'react'\r\nimport classes from './Post.module.scss'\r\nimport likeIcon from \"../../../../Assets/Images/like.svg\";\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={classes.post}>\r\n            <h2 className={classes.postText}>\r\n                {props.message}\r\n            </h2>\r\n            <div className={classes.post__likes}>\r\n                <div className={classes.post__like}>\r\n                    <img src={likeIcon} alt=\"\"/>\r\n                   <span>{props.like}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport classes from './MyPosts.module.scss'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FromControls/FormsControls\";\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit} className={classes.postsForm}>\r\n          <Field component={Textarea} name=\"newPostText\" placeholder=\"Enter your Message\"\r\n                 validate={[required, maxLength100 ]}\r\n          />\r\n\r\n          <button className={classes.mainBtn}>Add</button>\r\n      </form>\r\n  )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        props.posts.map((post, index) => <Post message={post.message} like={post.likesCount} key={index}/>)\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <div className={classes.postBlock}>\r\n                <h3>–ú–æ–∏ –ø–æ—Å—Ç—ã</h3>\r\n                <AddPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts\r\n","import {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer\r\n","import React, {useState} from \"react\";\r\nimport classes from './Profileinfo.module.scss'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../Assets/Images/user-img.png\";\r\nimport changeIcon from \"../../../Assets/Images/change.svg\";\r\nimport ProfileDataForm from \"./ProfildeDataForm\";\r\nimport MyPostsContainer from \"../MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({profile,status, updateStatus,isOwner,savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length ) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then (\r\n            ()=> {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    // –ø–æ—Ç–æ–º —É–±—Ä–∞—Ç—å\r\n    let devider =  <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner}/>;\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <div className={classes.profileInfo}>\r\n            <div className={classes.avaBlock}>\r\n                 <img src={profile.photos.large || userPhoto } alt=\"\" className={classes.avaBlock__img}/>\r\n                {isOwner &&\r\n                <div className={classes.avaBlock__panel}>\r\n                    <label className={classes.avaBlock__label}>\r\n                        <input type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                        <img src={changeIcon} alt=\"icon\" className={classes.changeAva}/>\r\n                    </label>\r\n                </div>}\r\n            </div>\r\n            <div className={classes.profileInfo__data}>\r\n                {\r\n                    editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData devider={devider}\r\n                                   profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/> }\r\n\r\n                {/*<ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>*/}\r\n            </div>\r\n        </div>\r\n            {\r\n                isOwner && <MyPostsContainer/>\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode,devider}) => {\r\n    return  (\r\n        <div className={classes.profileInfo__get}>\r\n            <h1> {profile.fullName}</h1>\r\n            {devider}\r\n            <div className={classes.profileInfo__row}>\r\n                <span>My ID:</span>   <b>{profile.userId}  </b>\r\n            </div>\r\n            {/*<div className={classes.profileInfo__row}>*/}\r\n            {/*    <span>Looking fora a job:</span>   <b>{profile.lookingForAJob ? \"yes\" : \"no\"}  </b>*/}\r\n            {/*</div>*/}\r\n            <div className={classes.profileInfo__row}>\r\n                <span>My skills:</span>   <b>{profile.lookingForAJobDescription}  </b>\r\n            </div>\r\n            <div className={classes.profileInfo__row}>\r\n                <span>About Me</span>  <b>{profile.aboutMe }  </b>\r\n            </div>\r\n            <div className={classes.profileInfo__contacts}>\r\n                <b>Contacts</b>\r\n                {\r\n                    Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                    })\r\n                }\r\n            </div>\r\n            { isOwner &&  <button onClick={goToEditMode} className={classes.mainBtn}>Edit</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.profileInfo__row}> <b> {contactTitle}: </b> <a href={contactValue}>{contactValue}</a> </div>\r\n};\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport ProfileInfo from \"./Profileinfo/Profileinfo\";\r\n//import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            {/*<MyPostsContainer/>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if  (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus,savePhoto, saveProfile }),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\nimport classes from'./Header.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from \"../../Assets/Images/react.svg\";\r\n\r\nconst Header = ({isAuth,login,logout,profile}) => {\r\n    if (profile) {\r\n    }\r\n    return(\r\n        <header className={classes.header}>\r\n            <NavLink to=\"/profile\" className={classes.logo}>\r\n                <img src={logo} alt=\"Logo\"/>\r\n            </NavLink>\r\n\r\n\r\n            <div className={classes.loginBlock}>\r\n\r\n                {isAuth\r\n                        //?  <div className={classes.loginBlock__row}> { profile &&  <img src={profile.photos.large} alt=\"ava\" className={classes.mainPhoto}/> }<div className={classes.loginBlock__name}>{login}</div>  <button onClick={logout} className={classes.loginBtn}>Logout</button>  </div>\r\n                        ?  <div className={classes.loginBlock__row}> <div className={classes.loginBlock__name}>{login}</div>  <button onClick={logout} className={classes.mainBtn}>Logout</button>  </div>\r\n                        : <div className={classes.loginBlock__row}><NavLink to={'/login'} className={classes.mainBtn}>Login</NavLink> </div>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header\r\n","import {securityAPI, authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_SUCCESS  = 'GET_CAPTCHA_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId,email,login,isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_SUCCESS,\r\n    payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    // return  authAPI.me()\r\n    //     //     .then(response => {\r\n    //     //         if (response.data.resultCode === 0) {\r\n    //     //             let {id, email, login} = response.data.data;\r\n    //     //             dispatch(setAuthUserData(id, email, login, true));\r\n    //     //         }\r\n    //     //     });\r\n\r\n    let response = await  authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    // authAPI.login(email, password, rememberMe)\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode === 0) {\r\n    //             dispatch(getAuthUserData());\r\n    //         } else {\r\n    //             let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n    //             dispatch(stopSubmit(\"login\", {_error: message}));\r\n    //         }\r\n    //     });\r\n    //\r\n   let response = await authAPI.login(email, password, rememberMe, captcha);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n\r\n             if (response.data.resultCode === 10) {\r\n                 dispatch(getCaptchaUrl());\r\n            }\r\n\r\n\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    // authAPI.logout()\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode === 0) {\r\n    //             dispatch(getAuthUserData(null, null, null, false));\r\n    //         }\r\n    //     });\r\n\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/auth-reducer\";\r\nimport {getUserProfile} from \"../../Redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        // this.props.getAuthUserData();\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n    render() {\r\n        return <Header {...this.props} profile={this.props.profile}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    profile: state.profilePage.profile\r\n});\r\n\r\n//export default connect(mapStateToProps, { logout,getUserProfile }) (HeaderContainer);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{logout,getUserProfile}),\r\n    withRouter,\r\n)(HeaderContainer);\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Input, createField} from \"../common/FromControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"./Login.module.sass\"\r\n\r\nconst LoginForm = ({handleSubmit,error, captchaUrl}) =>  {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={classes.loginForm}>\r\n            {createField(\"Email\", \"email\", [required], Input,{type: \"email\", className:classes.formInput}) }\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\",className:classes.formInput}) }\r\n\r\n            { captchaUrl && <img src={captchaUrl} alt=\"captcha\"/>}\r\n            { captchaUrl && createField(\"–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç\", \"captcha\", [required], Input)      }\r\n\r\n            { error && <div className={classes.formSummaryError}> <span>{error}</span> </div>\r\n            }\r\n            <button className={classes.mainBtn}>Login</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) =>  {\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default  connect(mapStateToProps, {login})(Login);\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default appReducer;","\r\n\r\nlet initialState = {\r\n}\r\n\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// window.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from './App.module.scss';\r\nimport NavBar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./Redux/app-reducer\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport store from \"./Redux/redux-store\";\r\n// import {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\n//const DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n//const UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n//const ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends React.Component  {\r\n    // catchAllUnhandledErrors = (reason, promise) => {\r\n    // alert('–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')\r\n    //  };\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n       // window.addEventListener(\"unhandledrejection\" , this.catchAllUnhandledErrors);\r\n    }\r\n    componentWillUnmount() {\r\n        //window.removeEventListener(\"unhandledrejection\" , this.catchAllUnhandledErrors);\r\n    }\r\n    render(){\r\n        if(!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className={classes.wrapper}>\r\n                <HeaderContainer/>\r\n                <main className={classes.main}>\r\n                    <NavBar/>\r\n                    <div className={classes.content}>\r\n                        {/*<Route path='/dialogs'\r\n                           render={() =>  <Suspense fallback={Preloader}><DialogsContainer/> </Suspense>}\r\n                    />\r\n                    <Route path='/profile/:userId?'render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n                    */}\r\n\r\n                        <Switch>\r\n                            {/*<Route exact path='/'*/}\r\n                            {/*       render={() => <ProfileContainer/>}*/}\r\n                            {/*/>*/}\r\n                            <Route exact path='/'\r\n                                   render={() => <Redirect to={\"/profile\"}/>}\r\n                            />\r\n\r\n                            <Route path='/dialogs'\r\n                                   render={() => <DialogsContainer/>}\r\n                            />\r\n                            <Route path='/profile/:userId?'\r\n                                   render={() => <ProfileContainer/>}\r\n                            />\r\n                            <Route path='/users' render={() => <UsersContainer/>}/>\r\n                            <Route path='/news' render={() => <News/>}/>\r\n                            <Route path='/music' render={() => <Music/>}/>\r\n                            <Route path='/settings' render={() => <Settings/>}/>\r\n                            <Route path='/login' render={() => <Login/>}/>\r\n                            <Route path='*' render={() => <div> 404</div>}/>\r\n                        </Switch>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps,{ initializeApp })) (App);\r\n\r\nconst  MainApp = (props) => {\r\n   return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </BrowserRouter>\r\n};\r\n\r\nexport default MainApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainApp from './App';\r\n\r\nReactDOM.render(<MainApp />,document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__5c0k_\",\"dialogItems\":\"Dialogs_dialogItems__2NGfA\",\"messageItems\":\"Dialogs_messageItems__3byRV\",\"dialogItem\":\"Dialogs_dialogItem__13H5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersItem\":\"Users_usersItem__1Rlh1\",\"follow__btn\":\"Users_follow__btn__v5RQm\",\"usersItem__info\":\"Users_usersItem__info__1TuNk\",\"follow__btn_reverse\":\"Users_follow__btn_reverse__tM6gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__1D6Wz\",\"posts\":\"MyPosts_posts__DihP1\",\"post\":\"MyPosts_post__2MZXd\",\"postsBlock\":\"MyPosts_postsBlock__2siE4\",\"mainBtn\":\"MyPosts_mainBtn__3SSAX\",\"postsForm\":\"MyPosts_postsForm__2BYuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3VuEW\",\"mainBtn\":\"Login_mainBtn__2W_HX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__LJwDW\",\"post__like\":\"Post_post__like__19mL5\",\"postText\":\"Post_postText__2C30L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"Profileinfo_profileInfo__3YFb5\",\"avaBlock\":\"Profileinfo_avaBlock__bzktP\",\"avaBlock__panel\":\"Profileinfo_avaBlock__panel__3IpAy\",\"avaBlock__img\":\"Profileinfo_avaBlock__img__3ZTl9\",\"avaBlock__label\":\"Profileinfo_avaBlock__label__3AAQ0\",\"changeAva\":\"Profileinfo_changeAva__Qy_zn\",\"profileInfo__data\":\"Profileinfo_profileInfo__data__A2jKG\",\"profileInfo__get\":\"Profileinfo_profileInfo__get__2nyo7\",\"profileInfo__row\":\"Profileinfo_profileInfo__row__3tifB\",\"profileInfo__contacts\":\"Profileinfo_profileInfo__contacts__16mUE\",\"mainBtn\":\"Profileinfo_mainBtn__2wwHw\",\"profileStatus\":\"Profileinfo_profileStatus__3d78x\",\"profileStatus__get\":\"Profileinfo_profileStatus__get__2Bl9L\",\"profileStatus__set\":\"Profileinfo_profileStatus__set__NBcgc\",\"statusEmpty\":\"Profileinfo_statusEmpty__l9Q4c\",\"profileStatus__current\":\"Profileinfo_profileStatus__current__ol-GJ\",\"profileForm\":\"Profileinfo_profileForm__3KfKt\",\"profileForm__row\":\"Profileinfo_profileForm__row__kJmBc\"};","module.exports = __webpack_public_path__ + \"static/media/user-img.1c9f98d1.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1XE1X\",\"main\":\"App_main__3RxfA\",\"content\":\"App_content__2esFZ\",\"preloader\":\"App_preloader__2dbuw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"FormsControls_formRow__31ZNA\",\"form–°ontrol\":\"FormsControls_form–°ontrol__3ONZp\",\"error\":\"FormsControls_error__3D5VU\",\"formCheckbox\":\"FormsControls_formCheckbox__3VjUY\",\"mainBtn\":\"FormsControls_mainBtn__NUUg5\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.be237328.svg\";"],"sourceRoot":""}